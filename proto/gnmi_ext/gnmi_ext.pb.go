// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: github.com/openconfig/gnmi/proto/gnmi_ext/gnmi_ext.proto

package gnmi_ext

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExtensionID int32

const (
	ExtensionID_EID_UNSET        ExtensionID = 0
	ExtensionID_EID_EXPERIMENTAL ExtensionID = 999
)

// Enum value maps for ExtensionID.
var (
	ExtensionID_name = map[int32]string{
		0:   "EID_UNSET",
		999: "EID_EXPERIMENTAL",
	}
	ExtensionID_value = map[string]int32{
		"EID_UNSET":        0,
		"EID_EXPERIMENTAL": 999,
	}
)

func (x ExtensionID) Enum() *ExtensionID {
	p := new(ExtensionID)
	*p = x
	return p
}

func (x ExtensionID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExtensionID) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_enumTypes[0].Descriptor()
}

func (ExtensionID) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_enumTypes[0]
}

func (x ExtensionID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExtensionID.Descriptor instead.
func (ExtensionID) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{0}
}

type Extension struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Ext:
	//
	//	*Extension_RegisteredExt
	//	*Extension_MasterArbitration
	//	*Extension_History
	//	*Extension_Commit
	//	*Extension_Depth
	//	*Extension_ConfigSubscription
	Ext           isExtension_Ext `protobuf_oneof:"ext"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Extension) Reset() {
	*x = Extension{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Extension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extension) ProtoMessage() {}

func (x *Extension) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extension.ProtoReflect.Descriptor instead.
func (*Extension) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{0}
}

func (x *Extension) GetExt() isExtension_Ext {
	if x != nil {
		return x.Ext
	}
	return nil
}

func (x *Extension) GetRegisteredExt() *RegisteredExtension {
	if x != nil {
		if x, ok := x.Ext.(*Extension_RegisteredExt); ok {
			return x.RegisteredExt
		}
	}
	return nil
}

func (x *Extension) GetMasterArbitration() *MasterArbitration {
	if x != nil {
		if x, ok := x.Ext.(*Extension_MasterArbitration); ok {
			return x.MasterArbitration
		}
	}
	return nil
}

func (x *Extension) GetHistory() *History {
	if x != nil {
		if x, ok := x.Ext.(*Extension_History); ok {
			return x.History
		}
	}
	return nil
}

func (x *Extension) GetCommit() *Commit {
	if x != nil {
		if x, ok := x.Ext.(*Extension_Commit); ok {
			return x.Commit
		}
	}
	return nil
}

func (x *Extension) GetDepth() *Depth {
	if x != nil {
		if x, ok := x.Ext.(*Extension_Depth); ok {
			return x.Depth
		}
	}
	return nil
}

func (x *Extension) GetConfigSubscription() *ConfigSubscription {
	if x != nil {
		if x, ok := x.Ext.(*Extension_ConfigSubscription); ok {
			return x.ConfigSubscription
		}
	}
	return nil
}

type isExtension_Ext interface {
	isExtension_Ext()
}

type Extension_RegisteredExt struct {
	RegisteredExt *RegisteredExtension `protobuf:"bytes,1,opt,name=registered_ext,json=registeredExt,proto3,oneof"`
}

type Extension_MasterArbitration struct {
	MasterArbitration *MasterArbitration `protobuf:"bytes,2,opt,name=master_arbitration,json=masterArbitration,proto3,oneof"`
}

type Extension_History struct {
	History *History `protobuf:"bytes,3,opt,name=history,proto3,oneof"`
}

type Extension_Commit struct {
	Commit *Commit `protobuf:"bytes,4,opt,name=commit,proto3,oneof"`
}

type Extension_Depth struct {
	Depth *Depth `protobuf:"bytes,5,opt,name=depth,proto3,oneof"`
}

type Extension_ConfigSubscription struct {
	ConfigSubscription *ConfigSubscription `protobuf:"bytes,6,opt,name=config_subscription,json=configSubscription,proto3,oneof"`
}

func (*Extension_RegisteredExt) isExtension_Ext() {}

func (*Extension_MasterArbitration) isExtension_Ext() {}

func (*Extension_History) isExtension_Ext() {}

func (*Extension_Commit) isExtension_Ext() {}

func (*Extension_Depth) isExtension_Ext() {}

func (*Extension_ConfigSubscription) isExtension_Ext() {}

type RegisteredExtension struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            ExtensionID            `protobuf:"varint,1,opt,name=id,proto3,enum=gnmi_ext.ExtensionID" json:"id,omitempty"`
	Msg           []byte                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisteredExtension) Reset() {
	*x = RegisteredExtension{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisteredExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisteredExtension) ProtoMessage() {}

func (x *RegisteredExtension) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisteredExtension.ProtoReflect.Descriptor instead.
func (*RegisteredExtension) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{1}
}

func (x *RegisteredExtension) GetId() ExtensionID {
	if x != nil {
		return x.Id
	}
	return ExtensionID_EID_UNSET
}

func (x *RegisteredExtension) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type MasterArbitration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          *Role                  `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	ElectionId    *Uint128               `protobuf:"bytes,2,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MasterArbitration) Reset() {
	*x = MasterArbitration{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MasterArbitration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterArbitration) ProtoMessage() {}

func (x *MasterArbitration) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterArbitration.ProtoReflect.Descriptor instead.
func (*MasterArbitration) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{2}
}

func (x *MasterArbitration) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *MasterArbitration) GetElectionId() *Uint128 {
	if x != nil {
		return x.ElectionId
	}
	return nil
}

type Uint128 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	High          uint64                 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low           uint64                 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uint128) Reset() {
	*x = Uint128{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uint128) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint128) ProtoMessage() {}

func (x *Uint128) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint128.ProtoReflect.Descriptor instead.
func (*Uint128) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{3}
}

func (x *Uint128) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Uint128) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

type Role struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{4}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type History struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*History_SnapshotTime
	//	*History_Range
	Request       isHistory_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *History) Reset() {
	*x = History{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{5}
}

func (x *History) GetRequest() isHistory_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *History) GetSnapshotTime() int64 {
	if x != nil {
		if x, ok := x.Request.(*History_SnapshotTime); ok {
			return x.SnapshotTime
		}
	}
	return 0
}

func (x *History) GetRange() *TimeRange {
	if x != nil {
		if x, ok := x.Request.(*History_Range); ok {
			return x.Range
		}
	}
	return nil
}

type isHistory_Request interface {
	isHistory_Request()
}

type History_SnapshotTime struct {
	SnapshotTime int64 `protobuf:"varint,1,opt,name=snapshot_time,json=snapshotTime,proto3,oneof"`
}

type History_Range struct {
	Range *TimeRange `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*History_SnapshotTime) isHistory_Request() {}

func (*History_Range) isHistory_Request() {}

type TimeRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         int64                  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           int64                  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{6}
}

func (x *TimeRange) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TimeRange) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type Commit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Action:
	//
	//	*Commit_Commit
	//	*Commit_Confirm
	//	*Commit_Cancel
	//	*Commit_SetRollbackDuration
	Action        isCommit_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Commit) Reset() {
	*x = Commit{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{7}
}

func (x *Commit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Commit) GetAction() isCommit_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *Commit) GetCommit() *CommitRequest {
	if x != nil {
		if x, ok := x.Action.(*Commit_Commit); ok {
			return x.Commit
		}
	}
	return nil
}

func (x *Commit) GetConfirm() *CommitConfirm {
	if x != nil {
		if x, ok := x.Action.(*Commit_Confirm); ok {
			return x.Confirm
		}
	}
	return nil
}

func (x *Commit) GetCancel() *CommitCancel {
	if x != nil {
		if x, ok := x.Action.(*Commit_Cancel); ok {
			return x.Cancel
		}
	}
	return nil
}

func (x *Commit) GetSetRollbackDuration() *CommitSetRollbackDuration {
	if x != nil {
		if x, ok := x.Action.(*Commit_SetRollbackDuration); ok {
			return x.SetRollbackDuration
		}
	}
	return nil
}

type isCommit_Action interface {
	isCommit_Action()
}

type Commit_Commit struct {
	Commit *CommitRequest `protobuf:"bytes,2,opt,name=commit,proto3,oneof"`
}

type Commit_Confirm struct {
	Confirm *CommitConfirm `protobuf:"bytes,3,opt,name=confirm,proto3,oneof"`
}

type Commit_Cancel struct {
	Cancel *CommitCancel `protobuf:"bytes,4,opt,name=cancel,proto3,oneof"`
}

type Commit_SetRollbackDuration struct {
	SetRollbackDuration *CommitSetRollbackDuration `protobuf:"bytes,5,opt,name=set_rollback_duration,json=setRollbackDuration,proto3,oneof"`
}

func (*Commit_Commit) isCommit_Action() {}

func (*Commit_Confirm) isCommit_Action() {}

func (*Commit_Cancel) isCommit_Action() {}

func (*Commit_SetRollbackDuration) isCommit_Action() {}

type CommitRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RollbackDuration *durationpb.Duration   `protobuf:"bytes,1,opt,name=rollback_duration,json=rollbackDuration,proto3" json:"rollback_duration,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{8}
}

func (x *CommitRequest) GetRollbackDuration() *durationpb.Duration {
	if x != nil {
		return x.RollbackDuration
	}
	return nil
}

type CommitConfirm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitConfirm) Reset() {
	*x = CommitConfirm{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitConfirm) ProtoMessage() {}

func (x *CommitConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitConfirm.ProtoReflect.Descriptor instead.
func (*CommitConfirm) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{9}
}

type CommitCancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitCancel) Reset() {
	*x = CommitCancel{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitCancel) ProtoMessage() {}

func (x *CommitCancel) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitCancel.ProtoReflect.Descriptor instead.
func (*CommitCancel) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{10}
}

type CommitSetRollbackDuration struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RollbackDuration *durationpb.Duration   `protobuf:"bytes,1,opt,name=rollback_duration,json=rollbackDuration,proto3" json:"rollback_duration,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommitSetRollbackDuration) Reset() {
	*x = CommitSetRollbackDuration{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitSetRollbackDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitSetRollbackDuration) ProtoMessage() {}

func (x *CommitSetRollbackDuration) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitSetRollbackDuration.ProtoReflect.Descriptor instead.
func (*CommitSetRollbackDuration) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{11}
}

func (x *CommitSetRollbackDuration) GetRollbackDuration() *durationpb.Duration {
	if x != nil {
		return x.RollbackDuration
	}
	return nil
}

type Depth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         uint32                 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Depth) Reset() {
	*x = Depth{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Depth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depth) ProtoMessage() {}

func (x *Depth) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depth.ProtoReflect.Descriptor instead.
func (*Depth) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{12}
}

func (x *Depth) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ConfigSubscription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Action:
	//
	//	*ConfigSubscription_Start
	//	*ConfigSubscription_SyncDone
	Action        isConfigSubscription_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigSubscription) Reset() {
	*x = ConfigSubscription{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSubscription) ProtoMessage() {}

func (x *ConfigSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSubscription.ProtoReflect.Descriptor instead.
func (*ConfigSubscription) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{13}
}

func (x *ConfigSubscription) GetAction() isConfigSubscription_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *ConfigSubscription) GetStart() *ConfigSubscriptionStart {
	if x != nil {
		if x, ok := x.Action.(*ConfigSubscription_Start); ok {
			return x.Start
		}
	}
	return nil
}

func (x *ConfigSubscription) GetSyncDone() *ConfigSubscriptionSyncDone {
	if x != nil {
		if x, ok := x.Action.(*ConfigSubscription_SyncDone); ok {
			return x.SyncDone
		}
	}
	return nil
}

type isConfigSubscription_Action interface {
	isConfigSubscription_Action()
}

type ConfigSubscription_Start struct {
	Start *ConfigSubscriptionStart `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type ConfigSubscription_SyncDone struct {
	SyncDone *ConfigSubscriptionSyncDone `protobuf:"bytes,2,opt,name=sync_done,json=syncDone,proto3,oneof"`
}

func (*ConfigSubscription_Start) isConfigSubscription_Action() {}

func (*ConfigSubscription_SyncDone) isConfigSubscription_Action() {}

type ConfigSubscriptionStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigSubscriptionStart) Reset() {
	*x = ConfigSubscriptionStart{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSubscriptionStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSubscriptionStart) ProtoMessage() {}

func (x *ConfigSubscriptionStart) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSubscriptionStart.ProtoReflect.Descriptor instead.
func (*ConfigSubscriptionStart) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{14}
}

type ConfigSubscriptionSyncDone struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommitConfirmId string                 `protobuf:"bytes,1,opt,name=commit_confirm_id,json=commitConfirmId,proto3" json:"commit_confirm_id,omitempty"`
	ServerCommitId  string                 `protobuf:"bytes,2,opt,name=server_commit_id,json=serverCommitId,proto3" json:"server_commit_id,omitempty"`
	Done            bool                   `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConfigSubscriptionSyncDone) Reset() {
	*x = ConfigSubscriptionSyncDone{}
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSubscriptionSyncDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSubscriptionSyncDone) ProtoMessage() {}

func (x *ConfigSubscriptionSyncDone) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSubscriptionSyncDone.ProtoReflect.Descriptor instead.
func (*ConfigSubscriptionSyncDone) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP(), []int{15}
}

func (x *ConfigSubscriptionSyncDone) GetCommitConfirmId() string {
	if x != nil {
		return x.CommitConfirmId
	}
	return ""
}

func (x *ConfigSubscriptionSyncDone) GetServerCommitId() string {
	if x != nil {
		return x.ServerCommitId
	}
	return ""
}

func (x *ConfigSubscriptionSyncDone) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

var File_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto protoreflect.FileDescriptor

const file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDesc = "" +
	"\n" +
	"8github.com/openconfig/gnmi/proto/gnmi_ext/gnmi_ext.proto\x12\bgnmi_ext\x1a\x1egoogle/protobuf/duration.proto\"\xfd\x02\n" +
	"\tExtension\x12F\n" +
	"\x0eregistered_ext\x18\x01 \x01(\v2\x1d.gnmi_ext.RegisteredExtensionH\x00R\rregisteredExt\x12L\n" +
	"\x12master_arbitration\x18\x02 \x01(\v2\x1b.gnmi_ext.MasterArbitrationH\x00R\x11masterArbitration\x12-\n" +
	"\ahistory\x18\x03 \x01(\v2\x11.gnmi_ext.HistoryH\x00R\ahistory\x12*\n" +
	"\x06commit\x18\x04 \x01(\v2\x10.gnmi_ext.CommitH\x00R\x06commit\x12'\n" +
	"\x05depth\x18\x05 \x01(\v2\x0f.gnmi_ext.DepthH\x00R\x05depth\x12O\n" +
	"\x13config_subscription\x18\x06 \x01(\v2\x1c.gnmi_ext.ConfigSubscriptionH\x00R\x12configSubscriptionB\x05\n" +
	"\x03ext\"N\n" +
	"\x13RegisteredExtension\x12%\n" +
	"\x02id\x18\x01 \x01(\x0e2\x15.gnmi_ext.ExtensionIDR\x02id\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\fR\x03msg\"k\n" +
	"\x11MasterArbitration\x12\"\n" +
	"\x04role\x18\x01 \x01(\v2\x0e.gnmi_ext.RoleR\x04role\x122\n" +
	"\velection_id\x18\x02 \x01(\v2\x11.gnmi_ext.Uint128R\n" +
	"electionId\"/\n" +
	"\aUint128\x12\x12\n" +
	"\x04high\x18\x01 \x01(\x04R\x04high\x12\x10\n" +
	"\x03low\x18\x02 \x01(\x04R\x03low\"\x16\n" +
	"\x04Role\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"h\n" +
	"\aHistory\x12%\n" +
	"\rsnapshot_time\x18\x01 \x01(\x03H\x00R\fsnapshotTime\x12+\n" +
	"\x05range\x18\x02 \x01(\v2\x13.gnmi_ext.TimeRangeH\x00R\x05rangeB\t\n" +
	"\arequest\"3\n" +
	"\tTimeRange\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x03R\x03end\"\x97\x02\n" +
	"\x06Commit\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\x06commit\x18\x02 \x01(\v2\x17.gnmi_ext.CommitRequestH\x00R\x06commit\x123\n" +
	"\aconfirm\x18\x03 \x01(\v2\x17.gnmi_ext.CommitConfirmH\x00R\aconfirm\x120\n" +
	"\x06cancel\x18\x04 \x01(\v2\x16.gnmi_ext.CommitCancelH\x00R\x06cancel\x12Y\n" +
	"\x15set_rollback_duration\x18\x05 \x01(\v2#.gnmi_ext.CommitSetRollbackDurationH\x00R\x13setRollbackDurationB\b\n" +
	"\x06action\"W\n" +
	"\rCommitRequest\x12F\n" +
	"\x11rollback_duration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x10rollbackDuration\"\x0f\n" +
	"\rCommitConfirm\"\x0e\n" +
	"\fCommitCancel\"c\n" +
	"\x19CommitSetRollbackDuration\x12F\n" +
	"\x11rollback_duration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x10rollbackDuration\"\x1d\n" +
	"\x05Depth\x12\x14\n" +
	"\x05level\x18\x01 \x01(\rR\x05level\"\x9e\x01\n" +
	"\x12ConfigSubscription\x129\n" +
	"\x05start\x18\x01 \x01(\v2!.gnmi_ext.ConfigSubscriptionStartH\x00R\x05start\x12C\n" +
	"\tsync_done\x18\x02 \x01(\v2$.gnmi_ext.ConfigSubscriptionSyncDoneH\x00R\bsyncDoneB\b\n" +
	"\x06action\"\x19\n" +
	"\x17ConfigSubscriptionStart\"\x86\x01\n" +
	"\x1aConfigSubscriptionSyncDone\x12*\n" +
	"\x11commit_confirm_id\x18\x01 \x01(\tR\x0fcommitConfirmId\x12(\n" +
	"\x10server_commit_id\x18\x02 \x01(\tR\x0eserverCommitId\x12\x12\n" +
	"\x04done\x18\x03 \x01(\bR\x04done*3\n" +
	"\vExtensionID\x12\r\n" +
	"\tEID_UNSET\x10\x00\x12\x15\n" +
	"\x10EID_EXPERIMENTAL\x10\xe7\aB+Z)github.com/openconfig/gnmi/proto/gnmi_extb\x06proto3"

var (
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescOnce sync.Once
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescData []byte
)

func file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDesc), len(file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDesc)))
	})
	return file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDescData
}

var file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_goTypes = []any{
	(ExtensionID)(0),                   // 0: gnmi_ext.ExtensionID
	(*Extension)(nil),                  // 1: gnmi_ext.Extension
	(*RegisteredExtension)(nil),        // 2: gnmi_ext.RegisteredExtension
	(*MasterArbitration)(nil),          // 3: gnmi_ext.MasterArbitration
	(*Uint128)(nil),                    // 4: gnmi_ext.Uint128
	(*Role)(nil),                       // 5: gnmi_ext.Role
	(*History)(nil),                    // 6: gnmi_ext.History
	(*TimeRange)(nil),                  // 7: gnmi_ext.TimeRange
	(*Commit)(nil),                     // 8: gnmi_ext.Commit
	(*CommitRequest)(nil),              // 9: gnmi_ext.CommitRequest
	(*CommitConfirm)(nil),              // 10: gnmi_ext.CommitConfirm
	(*CommitCancel)(nil),               // 11: gnmi_ext.CommitCancel
	(*CommitSetRollbackDuration)(nil),  // 12: gnmi_ext.CommitSetRollbackDuration
	(*Depth)(nil),                      // 13: gnmi_ext.Depth
	(*ConfigSubscription)(nil),         // 14: gnmi_ext.ConfigSubscription
	(*ConfigSubscriptionStart)(nil),    // 15: gnmi_ext.ConfigSubscriptionStart
	(*ConfigSubscriptionSyncDone)(nil), // 16: gnmi_ext.ConfigSubscriptionSyncDone
	(*durationpb.Duration)(nil),        // 17: google.protobuf.Duration
}
var file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_depIdxs = []int32{
	2,  // 0: gnmi_ext.Extension.registered_ext:type_name -> gnmi_ext.RegisteredExtension
	3,  // 1: gnmi_ext.Extension.master_arbitration:type_name -> gnmi_ext.MasterArbitration
	6,  // 2: gnmi_ext.Extension.history:type_name -> gnmi_ext.History
	8,  // 3: gnmi_ext.Extension.commit:type_name -> gnmi_ext.Commit
	13, // 4: gnmi_ext.Extension.depth:type_name -> gnmi_ext.Depth
	14, // 5: gnmi_ext.Extension.config_subscription:type_name -> gnmi_ext.ConfigSubscription
	0,  // 6: gnmi_ext.RegisteredExtension.id:type_name -> gnmi_ext.ExtensionID
	5,  // 7: gnmi_ext.MasterArbitration.role:type_name -> gnmi_ext.Role
	4,  // 8: gnmi_ext.MasterArbitration.election_id:type_name -> gnmi_ext.Uint128
	7,  // 9: gnmi_ext.History.range:type_name -> gnmi_ext.TimeRange
	9,  // 10: gnmi_ext.Commit.commit:type_name -> gnmi_ext.CommitRequest
	10, // 11: gnmi_ext.Commit.confirm:type_name -> gnmi_ext.CommitConfirm
	11, // 12: gnmi_ext.Commit.cancel:type_name -> gnmi_ext.CommitCancel
	12, // 13: gnmi_ext.Commit.set_rollback_duration:type_name -> gnmi_ext.CommitSetRollbackDuration
	17, // 14: gnmi_ext.CommitRequest.rollback_duration:type_name -> google.protobuf.Duration
	17, // 15: gnmi_ext.CommitSetRollbackDuration.rollback_duration:type_name -> google.protobuf.Duration
	15, // 16: gnmi_ext.ConfigSubscription.start:type_name -> gnmi_ext.ConfigSubscriptionStart
	16, // 17: gnmi_ext.ConfigSubscription.sync_done:type_name -> gnmi_ext.ConfigSubscriptionSyncDone
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_init() }
func file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_init() {
	if File_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto != nil {
		return
	}
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[0].OneofWrappers = []any{
		(*Extension_RegisteredExt)(nil),
		(*Extension_MasterArbitration)(nil),
		(*Extension_History)(nil),
		(*Extension_Commit)(nil),
		(*Extension_Depth)(nil),
		(*Extension_ConfigSubscription)(nil),
	}
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[5].OneofWrappers = []any{
		(*History_SnapshotTime)(nil),
		(*History_Range)(nil),
	}
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[7].OneofWrappers = []any{
		(*Commit_Commit)(nil),
		(*Commit_Confirm)(nil),
		(*Commit_Cancel)(nil),
		(*Commit_SetRollbackDuration)(nil),
	}
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes[13].OneofWrappers = []any{
		(*ConfigSubscription_Start)(nil),
		(*ConfigSubscription_SyncDone)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDesc), len(file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto = out.File
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_goTypes = nil
	file_github_com_openconfig_gnmi_proto_gnmi_ext_gnmi_ext_proto_depIdxs = nil
}
